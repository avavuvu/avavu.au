---
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";
import { getEntries, render } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import EmailLayout from "../../layouts/EmailLayout.astro";
import Handlebars from "handlebars"
import {marked} from "marked"

export async function getStaticPaths() {
  const newsletter = await getCollection("newsletter");

  return newsletter.map(({ id }) => ({
    params: { id },
  }));
}

const { id } = Astro.params;

const entry = await getEntry("newsletter", id);

if (!entry) {
  return new Response(404);
}

const template = Handlebars.compile(entry.body!)
const templatedMarkdown = template({
  name: "Web Surfer"
})

const markdown = await marked.parse(templatedMarkdown);

const { data } = entry;

---

<Layout>
  <main class="email-main">
    <header class="w-full text-center">
      <span class="w-full text-7xl md:text-8xl lg:text-8xl"> AVAVU.AU </span>

      <nav>
        <a class="link" href="https://avavu.au"> website </a>
        <span>
          <span class="border-r border-black"> </span>
        </span>
        <span> newsletter </span>
      </nav>
    </header>
    <div class="markdown" set:html={markdown}>
      
    </div>

    <div>
      {
        data.cool && (<div>
            {
            <h2 class="section-title" id="cool">COOL THINGS</h2>
            <ul class="section-list">
              {
              (data.cool || []).map(({ title, links, info }) => (
                <li>
                  <h3>
                    <a href={links[0]}>{title}</a>
                  </h3>
                  <p>{info}</p>

                  {links.length > 1 && (
                    <ul class="link-list">
                      {links.map((link) => (
                        <li>
                          <a href={link}>
                            {link.replace("https://", "").replace("www.", "")}
                          </a>
                        </li>
                      ))}
                    </ul>
                  )}
                </li>
              ))
              }
            </ul>
            }
          </div>)
        }
    </div>

    <div>
      {
        data.crosswords && (
          <div>
            <h2 class="section-title" id="crosswords">
              CROSSWORDS
            </h2>
            <ul class="section-list">
              {(data.crosswords || []).map((crossword) => (
                <li>
                  <h3>
                    <a href={crossword.link}>
                      {crossword.date.toLocaleDateString("en", {
                        month: "long",
                        day: "2-digit",
                      })}
                    </a>{" "}
                    â€“{" "}
                    <span style="text-align: right">
                      For {crossword.vendor}
                    </span>
                  </h3>

                  <p>{crossword.info}</p>
                </li>
              ))}
            </ul>
          </div>
        )
      }
      {
        data.music && (
          <div>
            <h2 class="section-title" id="music">
              MUSIC
            </h2>
            <ul class="section-list">
              {(data.music || []).map(({ title, link, info }) => (
                <li>
                  <h3>
                    <a href={link}>{title}</a>
                  </h3>
                  <p>{info}</p>
                </li>
              ))}
            </ul>
          </div>
        )
      }
    </div>
  </main>
</Layout>

<style is:global>
  a {
    color: blue;
  }

  ul {
    margin-left: 2rem;
  }

  h1,
  h2,
  h4 {
    font-weight: bold;
  }

  p {
    margin-bottom: 1rem;
    line-height: 1.2;
  }

  main {
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
    border: 1px black solid;
    padding: 2rem 1rem;
  }

  nav {
    border-top: 1px solid black;
    border-bottom: 1px solid black;

    display: inline-flex;
    justify-content: center;
    width: 100%;
    gap: 0.5rem;
  }

  .link {
    color: blue;
    text-decoration: underline;
  }

  * {
    font-family: Helvetica, Arial, sans-serif;
  }

  .markdown {
    padding: 3rem 0rem;
  }
  img {
    max-width: 100%;
  }
</style>
